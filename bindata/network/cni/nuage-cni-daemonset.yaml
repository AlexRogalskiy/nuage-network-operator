# This ConfigMap is used to configure Nuage VSP configuration
kind: ConfigMap
apiVersion: v1
metadata:
  name: nuage-cni-config-data
  namespace: kube-system
data:
  # This will generate the required Nuage vsp-k8s.yaml
  # config on each slave node
  plugin_yaml_config: |
      {{with .KubeConfig}}
      # Path to Nuage kubeconfig
      kubeConfig: /usr/share/vsp-k8s/nuage.kubeconfig
      {{end}}
      # Name of the enterprise in which pods will reside
      enterpriseName: {{.Enterprise}}
      # Name of the domain in which pods will reside
      domainName: {{.Domain}}
      # Name of the VSD user in admin group
      vsdUser: {{.VSDUser}}
      # REST server URL
      nuageMonRestServer: {{.NuageMonitorURL}}
      # Certificate for connecting to the kubemon REST API
      nuageMonClientCert: {{.NuageMonClientCert}}
      # Key to the certificate in restClientCert
      nuageMonClientKey: {{.NuageMonClientKey}}
      # CA certificate for verifying the master's rest server
      nuageMonServerCA: {{.NuageMonClientCA}}
      # Nuage vport mtu size
      interfaceMTU: {{.InterfaceMTU}}
      # Service CIDR
      serviceCIDR: {{.ServiceNetworkCIDR}}
      # Logging level for the plugin
      # allowed options are: "dbg", "info", "warn", "err", "emer", "off"
      logLevel: {{.LogLevel}}

  # This will generate the required Nuage CNI yaml configuration
  cni_yaml_config: |
      vrsendpoint: {{.VRSSocketFile}}
      vrsbridge: {{.VRSBridge}}
      monitorinterval: {{.MonitorInterval}}
      cniversion: {{.CNIVersion}}
      loglevel: {{.LogLevel}}
      portresolvetimer: {{.PortResolveTimer}}
      logfilesize: {{.LogFileSize}}
      vrsconnectionchecktimer: {{.VRSConnectionTimer}}
      mtu: {{.InteraceMTU}}
      staleentrytimeout: {{.StaleEntryTimeout}}
      nuagesiteid: {{.NuageSiteID}}

---

# This manifest installs Nuage CNI plugins and network config on
# each worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: nuage-cni
  namespace: kube-system
  labels:
    k8s-app: nuage-cni
spec:
  selector:
    matchLabels:
      k8s-app: nuage-cni
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: nuage-cni
    spec:
      hostNetwork: true
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
          operator: Exists
      serviceAccoutName: {{.CNIServiceAccountName}}
      containers:
        # This container installs Nuage CNI binaries
        # and CNI network config file on each node.
        - name: nuage-cni
          image: nuage/cni:{{.CNIReleaseTag}}
          command: ["/install-cni.sh"]
          args: ["nuage-cni-k8s"]
          securityContext:
            privileged: true
          env:
            # Set the hostname based on the k8s node name.
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Nuage vsp-k8s.yaml config to install on each slave node.
            - name: NUAGE_VSP_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: nuage-cni-config-data
                  key: plugin_yaml_config
            # Nuage nuage-cni.yaml config to install on each slave node.
            - name: NUAGE_CNI_YAML_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: nuage-cni-config-data
                  key: cni_yaml_config
            # Nuage cluster network CIDR for iptables configuration
            - name: NUAGE_CLUSTER_NW_CIDR
              value: {{.ClusterNetworkCIDR}}
            # Kubernetes Master api-server URL
            - name: MASTER_API_SERVER_URL
              value: {{.K8SApiServerURL}}
          volumeMounts:
            - mountPath: /host/opt
              name: cni-bin-dir
            - mountPath: /host/etc
              name: cni-yaml-dir
            - mountPath: /var/run
              name: var-run-dir
            - mountPath: /var/log
              name: cni-log-dir
            - mountPath: /usr/share
              name: usr-share-dir
            - mountPath: /etc/kubernetes/pki/
              name: kubernetes-ca-dir
            - mountPath: /var/lib/kubelet/pki/
              name: kubernetes-cert-dir
      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt
        - name: cni-yaml-dir
          hostPath:
            path: /etc
        - name: var-run-dir
          hostPath:
            path: /var/run
        - name: cni-log-dir
          hostPath:
            path: /var/log
        - name: usr-share-dir
          hostPath:
            path: /usr/share
        - name: kubernetes-ca-dir
          hostPath:
            path: /etc/kubernetes/pki/
        - name: kubernetes-cert-dir
          hostPath:
            path: /var/lib/kubelet/pki/
